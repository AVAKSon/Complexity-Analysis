Kind,Name,CountLineCode,MaxCyclomatic,MaxNesting,SumCyclomatic
Function,"A",4,,0,
File,"A+B.c",7,1,0,1
File,"AKS test for primes.c",37,4,2,12
File,"Abundant, deficient and perfect number classifications.c",30,7,3,7
File,"Ackermann function.c",14,3,2,6
File,"Additive primes.c",64,6,3,12
File,"Almost prime.c",22,4,3,7
File,"Amicable pairs.c",38,12,4,12
File,"Anonymous recursion.c",23,2,1,5
File,"Anti-primes.c",23,4,2,7
Function,"AppendChild",12,,2,
File,"Arithmetic evaluation.c",181,9,2,40
File,"Arithmetic_Integer.c",14,3,1,3
File,"Array concatenation.c",21,2,1,3
File,"Array length.c",7,1,0,1
File,"Arrays.c",2,0,0,0
Function,"B",5,,0,
File,"Binary search.c",48,4,2,11
File,"Call a function.c",5,1,0,1
File,"Carmichael 3 strong pseudoprimes.c",39,7,4,14
File,"Character codes.c",5,1,0,1
File,"Check that file exists.c",19,5,0,7
File,"Chernick's Carmichael numbers.c",35,9,3,18
Struct,"Children",4,0,0,0
File,"Chowla numbers.c",27,8,2,12
File,"Circular primes.c",86,8,3,22
Function,"Combsort11",23,,3,
File,"Compare length of two strings.c",51,7,4,9
File,"Consecutive primes with ascending or descending differences.c",78,10,3,22
File,"Copy a string.c",29,3,1,3
File,"Count in factors.c",54,8,4,16
File,"Create a file.c",5,1,0,1
File,"Cuban primes.c",94,16,6,21
File,"DNS query.c",26,4,2,4
File,"Detect division by zero.c",53,6,2,8
File,"Determine if a string is numeric.c",8,2,1,2
File,"Dragon curve.c",73,9,3,24
File,"Emirp primes.c",44,9,3,16
File,"Empty program.c",4,1,0,1
File,"Environment variables.c",6,1,0,1
File,"Even or odd.c",3,0,0,0
File,"Extensible prime generator.c",72,11,2,24
File,"Extra primes.c",61,9,3,21
Function,"F",4,,0,
Function,"F",9,,1,
File,"FTP.c",13,1,0,1
File,"Factorial.c",6,2,1,2
File,"Factors of a Mersenne number.c",23,8,3,14
File,"Factors of an integer.c",60,6,2,12
File,"Fermat numbers.c",32,4,2,6
File,"Fibonacci sequence.c",9,2,1,2
File,"File input_output.c",21,4,1,4
File,"Find largest left truncatable prime in a given base.c",48,5,3,11
File,"Find limit of recursion.c",10,1,0,2
File,"FizzBuzz.c",3,6,2,6
File,"Formatted numeric output.c",10,1,0,1
File,"Fortunate numbers.c",65,11,3,21
File,"Fractal tree.c",56,4,3,8
File,"Fractran.c",50,4,2,7
File,"Frobenius numbers.c",25,7,3,10
File,"Function definition.c",4,1,0,1
File,"General FizzBuzz.c",38,5,3,7
Function,"GetAncestors",20,,2,
Function,"GetParent",20,,2,
Function,"GetPrimes",25,,4,
File,"Greatest common divisor.c",28,10,2,10
File,"Greatest element of a list.c",9,3,1,3
File,"HTTP.c",17,3,2,3
File,"Halt and catch fire.c",1,1,0,1
File,"Hamming numbers.c",40,5,3,12
File,"Hello world_Graphical.c",10,1,0,1
File,"Hello world_Text.c",5,1,0,1
File,"Hello world_Web server.c",36,5,2,5
File,"Humble numbers.c",37,6,3,12
File,"Increment a numerical string.c",47,13,2,15
File,"Input loop.c",26,6,3,8
File,"Integer comparison.c",12,4,1,4
File,"JortSort.c",35,3,2,10
File,"Keyboard input_Obtain a Y or N response.c",48,5,2,9
File,"Least common multiple.c",15,2,1,4
File,"Legendre prime counting function.c",78,17,3,19
File,"Literals_Integer.c",7,2,0,2
File,"Logical operations.c",6,1,0,1
File,"Long primes.c",67,7,2,16
File,"Longest common subsequence.c",42,9,3,10
File,"Loops_Break.c",14,3,2,3
File,"Loops_Do-while.c",5,0,0,0
File,"Loops_Downward for.c",3,0,0,0
File,"Loops_For with a specified step.c",3,0,0,0
File,"Loops_For.c",6,0,0,0
File,"Loops_Increment loop index within loop body.c",24,6,2,9
File,"Loops_Infinite.c",1,0,0,0
File,"Loops_N plus one half.c",9,3,1,3
File,"Loops_While.c",10,0,0,0
File,"Loops_With multiple ranges.c",29,8,1,13
File,"Lucas-Lehmer test.c",57,11,2,15
File,"Ludic numbers.c",52,8,3,17
Function,"M",4,,0,
File,"Magnanimous numbers.c",76,7,4,24
File,"Man or boy test.c",27,2,0,9
File,"Mersenne primes.c",25,7,2,10
File,"Mertens function.c",49,9,3,13
File,"Miller–Rabin primality test.c",76,3,2,3
File,"Motzkin numbers.c",29,7,2,11
File,"Multiplication tables.c",12,8,2,8
File,"Mutual recursion.c",21,3,1,7
File,"Möbius function.c",41,13,3,13
File,"N-smooth numbers.c",110,7,4,31
File,"Nice primes.c",43,7,3,13
File,"Nth root.c",29,4,1,7
File,"Null object.c",8,2,1,2
File,"Numbers with prime digits whose sum is 13.c",33,6,3,10
File,"Order by pair comparisons.c",26,2,1,4
File,"Order two numerical lists.c",11,7,2,7
File,"Palindrome detection.c",10,3,2,3
File,"Partition an integer x into n primes.c",112,6,3,25
File,"Partition function P.c",30,5,3,6
File,"Perfect numbers.c",32,4,3,7
File,"Pernicious numbers.c",20,5,2,7
File,"Pierpont primes.c",100,8,3,20
File,"Power set.c",26,3,2,4
File,"Primality by Wilson's theorem.c",26,4,2,7
File,"Primality by trial division.c",8,4,2,4
File,"Prime conspiracy.c",93,13,3,28
File,"Prime decomposition.c",131,10,3,34
Struct,"PrimeArray",5,0,0,0
File,"Primes - allocate descendants to their ancestors.c",161,13,4,34
File,"Primes whose sum of digits is 25.c",41,7,2,12
File,"Primorial numbers.c",51,4,3,11
Function,"PrintDescendants",16,,1,
File,"Program termination.c",8,1,0,1
File,"Proper divisors.c",32,5,3,9
File,"Quickselect algorithm.c",24,5,2,7
File,"RPG attributes generator.c",37,10,3,11
File,"Ramer-Douglas-Peucker line simplification.c",59,6,2,11
File,"Ranking methods.c",87,6,3,23
File,"Read a file line by line.c",19,3,1,3
File,"Real constants and functions.c",10,0,0,0
File,"Remove duplicate elements.c",26,8,4,10
File,"Rosetta Code_Rank languages by popularity.c",64,5,2,16
File,"Safe primes and unsafe primes.c",75,11,3,19
File,"Selectively replace multiple instances of a character within a string.c",27,8,3,8
File,"Semiprime.c",16,3,2,6
File,"Send email.c",66,3,1,5
File,"Sequence of primes by trial division.c",25,4,2,7
File,"Sequence of primorial primes.c",27,4,2,4
File,"Sexy primes.c",142,27,3,38
File,"Sieve of Eratosthenes.c",21,6,4,6
File,"Simple windowed application.c",32,1,0,2
File,"Smarandache prime-digital sequence.c",63,9,3,23
File,"Sockets.c",28,5,4,5
File,"Sort a list of object identifiers.c",96,7,2,23
File,"Sort an array of composite structures.c",85,12,4,19
File,"Sort an integer array.c",13,2,0,3
File,"Sort disjoint sublist.c",21,7,3,10
File,"Sort numbers lexicographically.c",44,6,2,11
File,"Sort three variables.c",36,14,3,14
File,"Sort using a custom comparator.c",15,3,1,4
File,"Sorting Algorithms_Circle Sort.c",23,4,2,8
File,"Sorting algorithms_Bead sort.c",32,10,2,12
File,"Sorting algorithms_Bogosort.c",29,3,2,9
File,"Sorting algorithms_Bubble sort.c",26,5,3,9
File,"Sorting algorithms_Cocktail sort with shifting bounds.c",55,7,3,13
File,"Sorting algorithms_Cocktail sort.c",33,6,4,10
File,"Sorting algorithms_Comb sort.c",23,6,3,6
File,"Sorting algorithms_Counting sort.c",34,5,2,12
File,"Sorting algorithms_Cycle sort.c",71,10,4,13
File,"Sorting algorithms_Gnome sort.c",11,4,3,4
File,"Sorting algorithms_Heapsort.c",45,5,2,14
File,"Sorting algorithms_Insertion sort.c",22,5,2,8
File,"Sorting algorithms_Merge sort.c",33,6,1,13
File,"Sorting algorithms_Pancake sort.c",51,7,3,11
File,"Sorting algorithms_Patience sort.c",49,9,3,13
File,"Sorting algorithms_Permutation sort.c",30,8,3,11
File,"Sorting algorithms_Quicksort.c",31,6,2,9
File,"Sorting algorithms_Radix sort.c",40,7,2,15
File,"Sorting algorithms_Selection sort.c",24,5,3,9
File,"Sorting algorithms_Shell sort.c",23,5,3,9
File,"Sorting algorithms_Sleep sort.c",8,2,1,2
File,"Sorting algorithms_Stooge sort.c",22,4,2,6
File,"Sorting algorithms_Strand sort.c",58,7,2,20
File,"Split a character string based on change of character.c",21,3,2,4
Function,"StoogeSort",12,,2,
File,"Strange numbers.c",33,6,3,8
File,"Strange plus numbers.c",19,4,2,8
File,"Strange unique prime triplets.c",74,15,5,21
File,"String append.c",15,2,1,2
File,"String comparison.c",24,2,1,4
File,"String concatenation.c",17,1,0,2
File,"String interpolation (included).c",5,1,0,1
File,"String matching.c",25,2,1,6
File,"String prepend.c",10,1,0,1
File,"Strong and weak primes.c",101,17,3,23
File,"Substring.c",20,2,1,3
File,"Successive prime differences.c",148,6,3,28
File,"Sudan function.c",13,3,1,4
File,"System time.c",7,1,0,1
File,"Tau number.c",34,5,3,9
File,"The sieve of Sundaram.c",23,10,3,10
File,"Tokenize a string.c",13,3,1,3
File,"Topological sort.c",95,11,3,28
File,"Totient function.c",37,7,3,13
File,"Towers of Hanoi.c",15,2,1,3
Struct,"Transition",4,0,0,0
File,"Tree traversal.c",123,4,2,24
File,"Truncatable primes.c",47,5,2,17
File,"Twin primes.c",45,12,2,17
File,"Two's complement.c",2,0,0,0
File,"Ulam spiral (for primes).c",60,7,4,18
File,"Unprimeable numbers.c",119,9,4,33
File,"User input_Text.c",15,2,1,2
File,"Walk a directory_Recursively.c",69,14,3,21
File,"Web scraping.c",32,3,2,5
File,"Wieferich primes.c",53,7,3,15
File,"Wilson primes of order n.c",58,9,3,16
File,"Yellowstone sequence.c",206,6,3,45
File,"Zero to the zero power.c",7,1,0,1
Function,"_scmp",5,,0,
Function,"ackermann",6,,1,
Function,"add_dep",6,,1,
Function,"add_digit",18,,3,
Function,"allocate",7,,0,
Struct,"arg",6,0,0,0
Function,"array_concat",8,,0,
Function,"bead_sort",23,,2,
Function,"bit_array_create",8,,1,
Function,"bit_array_create",8,,1,
Function,"bit_array_destroy",4,,0,
Function,"bit_array_destroy",4,,0,
Function,"bit_array_get",5,,0,
Function,"bit_array_get",6,,0,
Function,"bit_array_set",9,,1,
Function,"bit_array_set",9,,1,
Struct,"bit_array_tag",4,0,0,0
Struct,"bit_array_tag",4,0,0,0
Function,"bogosort",4,,1,
Function,"bsearch",16,,2,
Function,"bsearch_r",15,,1,
Function,"bubble_sort",6,,3,
Function,"bubble_sort",15,,3,
Function,"carmichael3",16,,4,
Function,"change_digit",8,,1,
Function,"char_count",8,,2,
Function,"check_dir",4,,0,
Function,"check_reg",4,,0,
Function,"chowla",5,,2,
Function,"circle_sort",8,,2,
Function,"circle_sort_inner",9,,2,
Function,"clickedme",8,,0,
Function,"cmp",4,,0,
Function,"cmprStrgs",37,,4,
Function,"cocktail_shaker_sort",27,,3,
Function,"cocktailsort",18,,4,
Function,"coef",8,,2,
Function,"compare",7,,1,
Function,"compare",6,,0,
Function,"compare",7,,0,
Function,"compareAndReportStringsLength",41,,4,
Function,"compareInts",5,,0,
Function,"compareStrings",5,,0,
Function,"comparecase",7,,0,
Function,"consume_char",7,,1,
Function,"consume_int",11,,1,
Function,"convert_array",11,,1,
Function,"countDivisors",9,,2,
Function,"countPrimes",66,,3,
Function,"countTwinPrimes",14,,2,
Function,"count_digits",6,,1,
Function,"counting_sort_mm",14,,2,
Function,"cycle",8,,1,
Function,"cycleSort",49,,4,
Function,"deallocate",4,,0,
Function,"decompose",18,,2,
Function,"denseRanking",9,,2,
Function,"dequeue",10,,1,
Function,"destroy_tree",8,,1,
Function,"diff1",26,,3,
Function,"diff2",30,,3,
Function,"diff3",34,,3,
Function,"digit_sum",6,,1,
Function,"digit_sum",9,,1,
Function,"digital_root",3,,0,
Function,"divisor_count",18,,2,
Function,"do_base",14,,1,
Function,"do_flip",11,,1,
Function,"doesContain",4,,0,
Function,"douglas_peucker",30,,2,
Function,"downheap",12,,2,
Function,"dragon",22,,2,
Function,"draw_tree",26,,1,
Function,"endsWith",7,,1,
Function,"enqueue",11,,1,
Function,"eratosthenes",21,,4,
Function,"es_check",7,,1,
Function,"es_sieve",10,,3,
Function,"eval",1,,0,
Function,"evaluate",51,,1,
Struct,"expression",4,0,0,0
Function,"expression",13,,2,
Function,"f0",1,,0,
Function,"f1",1,,0,
Function,"f_1",1,,0,
Function,"factor",11,,1,
Function,"factor",23,,2,
Function,"factor_tail",25,,2,
Function,"factorial",6,,1,
Function,"factorial",15,,2,
Function,"fib",9,,1,
Function,"fib_i",5,,0,
Function,"fibb",9,,1,
Function,"filterit",7,,1,
Function,"find",7,,2,
Function,"findPeriod",12,,1,
Function,"find_nsmooth_numbers",30,,3,
Function,"find_prime_partition",20,,2,
Function,"find_primes",18,,4,
Static Function,"fpe_handler",5,,0,
Struct,"frac_s",4,0,0,0
Function,"fractionalRanking",20,,3,
Function,"free_list",9,,1,
Function,"free_lnode",9,,1,
Function,"free_map",7,,1,
Function,"free_mnode",9,,1,
Function,"free_numbers",5,,1,
Function,"frob",3,,0,
Function,"gcd",6,,1,
Function,"gcd",8,,2,
Function,"gcd_bin",28,,2,
Function,"generic_fizz_buzz",17,,3,
Function,"get_cats",17,,2,
Function,"get_depth",16,,2,
Function,"get_item",13,,2,
Function,"get_key",15,,1,
Function,"get_langs",9,,2,
Function,"get_line",17,,3,
Function,"get_page",18,,2,
Function,"get_prime",31,,4,
Function,"gnome_sort",11,,3,
Function,"h_rgb",17,,1,
Function,"heapsort",12,,1,
Function,"incr",27,,2,
Function,"init",15,,2,
Function,"init",11,,2,
Function,"init_primes",25,,2,
Function,"init_primes",13,,2,
Function,"init_sieve",15,,3,
Function,"initialize",21,,2,
Function,"inorder",8,,1,
Function,"insertion_sort",11,,2,
Function,"intcmp",5,,0,
Function,"interactiveCompare",10,,0,
Function,"ipow",7,,1,
Function,"isHumble",8,,1,
Function,"isNumeric",8,,1,
Function,"isPrime",10,,2,
Function,"isPrime",14,,2,
Function,"isPrime",4,,0,
Function,"isPrime",30,,3,
Function,"isPrime",25,,2,
Function,"isPrime",23,,2,
Function,"isPrime",10,,2,
Function,"isPrime",6,,1,
Function,"isPrime",16,,2,
Function,"isPrime",18,,2,
Function,"isPrime",16,,2,
Function,"isSorted",7,,2,
Function,"is_chernick",10,,2,
Function,"is_circular_prime",11,,2,
Function,"is_emirp",5,,0,
Function,"is_magnanimous",11,,2,
Function,"is_pern",6,,1,
Function,"is_prime",8,,1,
Function,"is_prime",16,,3,
Function,"is_prime",11,,2,
Function,"is_prime",9,,2,
Function,"is_prime",21,,3,
Function,"is_prime",12,,2,
Function,"is_prime",14,,2,
Function,"is_prime",16,,2,
Function,"is_prime",21,,2,
Function,"is_prime",11,,2,
Function,"is_prime",4,,0,
Function,"is_prime",8,,2,
Function,"is_prime",23,,2,
Function,"is_prime",12,,3,
Function,"is_prime",21,,3,
Function,"is_prime",8,,1,
Function,"is_sorted",7,,2,
Function,"isstrange",7,,2,
Struct,"item_t",1,0,0,0
Function,"iter_string",17,,3,
Function,"join",4,,0,
Function,"kprime",8,,2,
Function,"lcm",4,,0,
Function,"lcs",31,,3,
Function,"left_trunc",12,,2,
Function,"levelorder",14,,2,
Function,"lexOrder",21,,2,
Function,"list_cmp",11,,2,
Function,"list_get",25,,3,
Function,"list_insert",17,,1,
Function,"list_mags",20,,4,
Struct,"list_node",1,0,0,0
Function,"list_print",9,,1,
Struct,"list_t",5,0,0,0
Struct,"lnode_t",5,0,0,0
Function,"longestSeq",41,,3,
Function,"lucas_lehmer",45,,2,
Function,"ludic",24,,3,
Function,"main",14,,2,
Function,"main",14,,3,
Function,"main",7,,0,
Function,"main",9,,1,
Function,"main",8,,2,
Function,"main",30,,3,
Function,"main",37,,4,
Function,"main",14,,1,
Function,"main",16,,2,
Function,"main",10,,1,
Function,"main",24,,3,
Function,"main",9,,1,
Function,"main",7,,0,
Function,"main",7,,1,
Function,"main",17,,1,
Function,"main",5,,0,
Function,"main",16,,3,
Function,"main",11,,0,
Function,"main",22,,2,
Function,"main",5,,0,
Function,"main",18,,2,
Function,"main",22,,4,
Function,"main",39,,3,
Function,"main",6,,0,
Function,"main",29,,1,
Function,"main",63,,6,
Function,"main",26,,2,
Function,"main",4,,0,
Function,"main",22,,3,
Function,"main",10,,0,
Function,"main",13,,0,
Function,"main",13,,3,
Function,"main",9,,0,
Function,"main",6,,0,
Function,"main",21,,3,
Function,"main",11,,1,
Function,"main",25,,2,
Function,"main",13,,1,
Function,"main",3,,2,
Function,"main",21,,1,
Function,"main",18,,2,
Function,"main",5,,0,
Function,"main",10,,0,
Function,"main",29,,3,
Function,"main",16,,3,
Function,"main",1,,0,
Function,"main",10,,0,
Function,"main",8,,1,
Function,"main",6,,0,
Function,"main",11,,0,
Function,"main",17,,2,
Function,"main",14,,2,
Function,"main",5,,0,
Function,"main",29,,3,
Function,"main",12,,0,
Function,"main",12,,1,
Function,"main",29,,2,
Function,"main",21,,2,
Function,"main",5,,0,
Function,"main",9,,1,
Function,"main",10,,1,
Function,"main",14,,2,
Function,"main",7,,0,
Function,"main",11,,1,
Function,"main",36,,2,
Function,"main",11,,0,
Function,"main",12,,2,
Function,"main",9,,1,
Function,"main",17,,1,
Function,"main",12,,2,
Function,"main",11,,2,
Function,"main",7,,0,
Function,"main",6,,0,
Function,"main",19,,2,
Function,"main",13,,1,
Function,"main",37,,3,
Function,"main",16,,2,
Function,"main",12,,2,
Function,"main",11,,1,
Function,"main",19,,3,
Function,"main",41,,3,
Function,"main",15,,3,
Function,"main",8,,1,
Function,"main",18,,2,
Function,"main",6,,0,
Function,"main",10,,0,
Function,"main",13,,2,
Function,"main",7,,2,
Function,"main",20,,1,
Function,"main",8,,0,
Function,"main",7,,1,
Function,"main",5,,0,
Function,"main",23,,3,
Function,"main",20,,2,
Function,"main",5,,0,
Function,"main",9,,2,
Function,"main",18,,2,
Function,"main",17,,3,
Function,"main",11,,1,
Function,"main",51,,3,
Function,"main",32,,3,
Function,"main",27,,2,
Function,"main",11,,0,
Function,"main",8,,1,
Function,"main",19,,1,
Function,"main",6,,1,
Function,"main",27,,2,
Function,"main",47,,3,
Function,"main",8,,2,
Function,"main",10,,1,
Function,"main",30,,1,
Function,"main",15,,2,
Function,"main",22,,0,
Function,"main",27,,3,
Function,"main",28,,3,
Function,"main",109,,3,
Function,"main",27,,4,
Function,"main",29,,2,
Function,"main",8,,0,
Function,"main",32,,1,
Function,"main",7,,0,
Function,"main",6,,0,
Function,"main",15,,1,
Function,"main",9,,1,
Function,"main",18,,2,
Function,"main",11,,1,
Function,"main",36,,3,
Function,"main",8,,1,
Function,"main",8,,1,
Function,"main",8,,1,
Function,"main",11,,0,
Function,"main",14,,1,
Function,"main",11,,0,
Function,"main",11,,1,
Function,"main",10,,1,
Function,"main",11,,1,
Function,"main",15,,1,
Function,"main",11,,1,
Function,"main",15,,2,
Function,"main",8,,1,
Function,"main",10,,1,
Function,"main",11,,1,
Function,"main",9,,1,
Function,"main",10,,1,
Function,"main",8,,0,
Function,"main",27,,3,
Function,"main",10,,2,
Function,"main",7,,0,
Function,"main",5,,0,
Function,"main",5,,0,
Function,"main",15,,1,
Function,"main",10,,1,
Function,"main",7,,0,
Function,"main",10,,0,
Function,"main",10,,0,
Function,"main",11,,0,
Function,"main",66,,3,
Function,"main",4,,0,
Function,"main",15,,0,
Function,"main",16,,3,
Function,"main",5,,0,
Function,"main",22,,2,
Function,"main",23,,3,
Function,"main",5,,0,
Function,"main",13,,1,
Function,"main",22,,3,
Function,"main",28,,0,
Function,"main",11,,0,
Function,"main",12,,2,
Function,"main",9,,0,
Function,"main",13,,1,
Function,"main",33,,4,
Function,"main",15,,1,
Function,"main",6,,0,
Function,"main",24,,2,
Function,"main",39,,3,
Function,"main",7,,0,
Function,"main",7,,0,
Function,"make_list",10,,1,
Function,"make_list_node",10,,1,
Function,"make_map",8,,1,
Function,"make_map_node",10,,1,
Function,"map_get",12,,2,
Function,"map_insert",14,,2,
Struct,"map_t",3,0,0,0
Function,"max",9,,1,
Function,"max",10,,1,
Function,"maxstrlen",6,,0,
Function,"memoizeIsPrime",30,,3,
Function,"merge",14,,1,
Function,"merge",8,,1,
Function,"merge_sort",8,,1,
Function,"mertens_numbers",12,,2,
Function,"min_max",12,,2,
Struct,"mnode_t",5,0,0,0
Function,"modifiedRanking",16,,3,
Function,"modpow",14,,2,
Function,"move",10,,1,
Function,"mpz_factors",19,,2,
Function,"mpz_number_of_digits",7,,0,
Function,"multiply",4,,0,
Function,"mycmp",8,,1,
Function,"next_prime",27,,3,
Function,"next_prime_digit_number",13,,1,
Function,"next_prime_digit_number",13,,1,
Struct,"node",4,0,0,0
Struct,"node_s",6,0,0,0
Struct,"node_t",1,0,0,0
Function,"number_of_digits",7,,1,
Function,"oid_compare",16,,2,
Function,"oid_create",31,,2,
Function,"oid_destroy",7,,1,
Struct,"oid_tag",5,0,0,0
Function,"op_arg",5,,0,
Function,"ord",23,,1,
Function,"ord",7,,1,
Function,"ordinalRanking",6,,1,
Function,"output_ulam_spiral",24,,4,
Function,"palindrome",10,,2,
Function,"pancake_sort",26,,3,
Function,"parse",12,,1,
Function,"parse_error",11,,1,
Function,"parse_input",18,,3,
Function,"partition",22,,3,
Function,"patienceSort",34,,3,
Static Function,"payload_source",16,,1,
Function,"perfect",13,,3,
Function,"perm_sort",19,,3,
Function,"perpendicular_distance",6,,0,
Function,"pierpont",41,,3,
Struct,"point_tag",4,0,0,0
Function,"postorder",8,,1,
Function,"pow_",8,,1,
Function,"powerset",17,,2,
Function,"preorder",8,,1,
Function,"primality_pretest",4,,1,
Function,"primeDigitsSum13",18,,2,
Function,"primeSieve",29,,3,
Static Function,"prime_sieve",24,,3,
Function,"print",5,,1,
Function,"print",4,,0,
Function,"printArray",6,,1,
Function,"printHelper",6,,0,
Function,"printOrder",6,,1,
Function,"printTransitions",9,,2,
Function,"print_logic",6,,0,
Function,"print_nsmooth_numbers",12,,1,
Function,"print_points",8,,2,
Function,"print_prime_partition",17,,2,
Function,"probprime",4,,0,
Function,"process",4,,1,
Function,"processFile",15,,1,
Function,"proper_divisors",14,,3,
Function,"push",8,,2,
Function,"push",5,,1,
Function,"push_back",14,,2,
Function,"putm",5,,1,
Struct,"qnode_s",5,0,0,0
Function,"qpop",13,,3,
Function,"qpush",10,,1,
Function,"qselect",13,,2,
Function,"queue_empty",4,,0,
Function,"quicksort",15,,2,
Static Function,"rad_sort_u",15,,2,
Static Function,"radix_sort",10,,1,
Function,"rand_fl",3,,0,
Function,"record",15,,3,
Function,"recurse",5,,0,
Function,"removehead",8,,1,
Function,"render",11,,0,
Struct,"replace_info",4,0,0,0
Function,"reverse",7,,1,
Function,"right_trunc",8,,2,
Function,"root",15,,1,
Function,"run",25,,2,
Function,"sc_up",5,,0,
Function,"scmp",1,,0,
Function,"sconcat",7,,0,
Function,"selection_sort",13,,3,
Function,"semiprime",8,,2,
Function,"set_mode",12,,1,
Function,"shell_sort",12,,3,
Function,"show",4,,1,
Function,"show",7,,1,
Function,"show_array",9,,1,
Function,"shuffle",10,,1,
Function,"sieve",19,,3,
Function,"sieve",16,,2,
Function,"sieve",14,,3,
Function,"sieve",18,,2,
Function,"sieve",17,,1,
Function,"sieve",20,,3,
Function,"sieve",10,,3,
Function,"sieve",19,,3,
Function,"sieve_check",7,,1,
Function,"sieve_create",14,,3,
Function,"sieve_create",13,,3,
Function,"sieve_destroy",3,,0,
Function,"sieve_destroy",3,,0,
Struct,"sieve_tag",4,0,0,0
Struct,"sieve_tag",4,0,0,0
Function,"sort",15,,2,
Function,"split",15,,2,
Function,"standardRanking",9,,2,
Function,"startsWith",7,,1,
Function,"strange_unique_prime_triplets",52,,5,
Function,"string_compare",5,,0,
Function,"string_test",8,,0,
Function,"sumOfDecimalDigits",10,,1,
Function,"swap",7,,1,
Function,"swap",7,,1,
Static Function,"swap",5,,0,
Function,"term",9,,1,
Function,"term_tail",23,,2,
Function,"test",4,,0,
Function,"test_repunit",17,,1,
Function,"totient",15,,3,
Function,"tree",8,,0,
Function,"try_division",37,,2,
Struct,"twoStringsStruct",3,0,0,0
Function,"ulam_get_map",9,,0,
Function,"uniq",18,,4,
Function,"unprimeable",13,,3,
Struct,"upload_status",3,0,0,0
Function,"walk_dir",10,,1,
Function,"walk_recur",40,,3,
Function,"wieferich_primes",8,,2,
Function,"xferFactors",15,,1,
Function,"xmalloc",8,,1,
Function,"xrealloc",8,,1,
Function,"yellow",24,,2,
